#BlueJ class context
comment0.target=Tree
comment0.text=\n\ Provides\ interaction\ methods\ for\ Binary\ Tree\ implementations.\n\n\ @author\ Sena\ Yevenyo\n\ @version\ October\ 21,\ 2019\n
comment1.params=e
comment1.target=boolean\ insert(java.lang.Comparable)
comment1.text=\n\ Inserts\ an\ object\ into\ the\ class\ implementing\ Tree\n\n\ @param\ object\ inserted\ into\ class\ implementing\ Tree\n
comment10.params=
comment10.target=boolean\ isEmpty()
comment10.text=\n\ Returns\ true\ if\ there\ are\ no\ objects\ in\ the\ object\ class\ implementing\ Tree\n\n\ @return\ boolean\ value\ determining\ if\ a\ tree\ implementing\ class\ object\ is\ empty\ or\ not\n
comment2.params=e
comment2.target=boolean\ contains(java.lang.Comparable)
comment2.text=\n\ Returns\ true\ if\ an\ object\ is\ present\ in\ class\ implenting\ Tree\n\n\ @param\ object\ to\ be\ searched\ \ \n\ @return\ boolean\ value\ determining\ if\ an\ object\ is\ present\ or\ not\n
comment3.params=i
comment3.target=int\ numOfElementsDepth(int)
comment3.text=\n\ Returns\ the\ number\ of\ objects\ at\ a\ certain\ depth\n\n\ @param\ depth\ number\n\ @return\ number\ of\ objects\ at\ the\ input\ depth\n
comment4.params=
comment4.target=java.lang.Comparable\ findMax()
comment4.text=\n\ Returns\ the\ largest\ object\ in\ the\ class\ implementing\ Tree\n\n\ @return\ the\ largest\ object\ in\ the\ class\ implementing\ Tree\n
comment5.params=
comment5.target=java.lang.Comparable\ findMin()
comment5.text=\n\ Returns\ the\ largest\ object\ in\ the\ class\ implementing\ Tree\n\n\ @return\ the\ largest\ object\ in\ the\ class\ implementing\ Tree\n
comment6.params=
comment6.target=java.lang.String\ preOrderString()
comment6.text=\n\ Returns\ a\ String\ representation\ using\ the\ pre-order\ transversal\n\n\ @return\ the\ String\ representation\ of\ the\ pre-order\ transversal\ the\ class\ object\ implementing\ Tree\n
comment7.params=
comment7.target=java.lang.String\ postOrderString()
comment7.text=\n\ Returns\ a\ String\ representation\ using\ the\ post-order\ transversal\n\n\ @return\ the\ String\ representation\ of\ the\ post-order\ transversal\ the\ class\ object\ implementing\ Tree\n
comment8.params=
comment8.target=java.lang.String\ inOrderString()
comment8.text=\n\ Returns\ a\ String\ representation\ using\ the\ in-order\ transversal\n\n\ @return\ the\ String\ representation\ of\ the\ in-order\ transversal\ the\ class\ object\ implementing\ Tree\n
comment9.params=
comment9.target=void\ empty()
comment9.text=\n\ Removes\ all\ the\ objects\ in\ a\ tree\n\n\n
numComments=11
