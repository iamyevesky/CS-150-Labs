#BlueJ class context
comment0.target=Dwarf
comment0.text=\n\ A\ class\ that\ offers\ template\ for\ the\ instantiation\ of\ Dwarf\ miners.\n\n\ @author\ Sena\ Yevenyo\n\ @version\ October\ 21,\ 2019\n
comment1.params=numOfSearchers\ numOfDiggers\ numOfMinerBuilders\ numOfSuperMiners\ numOfUltimateMiners
comment1.target=void\ setNumOfDwarfs(int,\ int,\ int,\ int,\ int)
comment1.text=\n\ Sets\ the\ number\ of\ dwarfs\ for\ a\ simulation\n\ \n\ @param\ int\ numberOfSearchers\ for\ the\ simulation\n\ @param\ int\ numberOfDiggers\ for\ the\ simulation\n\ @param\ int\ numberOfMinerBuilders\ for\ the\ simulation\n\ @param\ int\ numberOfSuperMiners\ for\ the\ simulation\n\ @param\ int\ numberOfUltimateMiners\ for\ the\ simulation\n
comment10.params=
comment10.target=void\ printToWriter()
comment10.text=\n\ Writes\ empty\ line\ into\ log\ files\n\ \n
comment11.params=text
comment11.target=void\ printToDataWriter(java.lang.String)
comment11.text=\n\ Writes\ text\ into\ data\ files\n\ \n\ @param\ text\ to\ be\ written\ into\ data\ file\n
comment12.params=
comment12.target=void\ printToDataWriter()
comment12.text=\n\ Writes\ empty\ line\ into\ data\ files\n\ \n
comment13.params=
comment13.target=void\ endSimulation()
comment13.text=\n\ Performs\ afterwork\ of\ simulation.\ Collects\ all\ final\ data\ from\ Dwarf\ elements\n\ \n
comment14.params=
comment14.target=int\ getDiedByPit()
comment14.text=\n\ Gets\ the\ total\ number\ of\ Dwarf\ objects\ who\ died\ by\ the\ Pit\ feature\ \n\ \n\ @return\ int\ value\ of\ Dwarf\ objects\ terminated\ by\ the\ Pit\ feature\ of\ the\ Map\n
comment15.params=
comment15.target=int\ getDiedByLava()
comment15.text=\n\ Gets\ the\ total\ number\ of\ Dwarf\ objects\ who\ died\ by\ the\ Lava\ feature\ \n\ \n\ @return\ int\ value\ of\ Dwarf\ objects\ terminated\ by\ the\ Lava\ feature\ of\ the\ Map\n
comment16.params=
comment16.target=int\ getDiedByRiver()
comment16.text=\n\ Gets\ the\ total\ number\ of\ Dwarf\ objects\ who\ died\ by\ the\ River\ feature\ \n\ \n\ @return\ int\ value\ of\ Dwarf\ objects\ terminated\ by\ the\ River\ feature\ of\ the\ Map\n
comment17.params=id\ diff\ node\ type
comment17.target=Dwarf(int,\ int,\ MapNode,\ int)
comment17.text=\n\ Constructor\ for\ objects\ of\ class\ Dwarf\n
comment18.params=
comment18.target=void\ go()
comment18.text=\n\ Determines\ the\ state\ of\ the\ Dwarf\ object\ and\ executes\ action\ based\ on\ state\ (Moore's\ Machine\ implementation)\n\n\n
comment19.params=
comment19.target=void\ goUltimateMiner()
comment19.text=\n\ Determines\ the\ state\ of\ the\ Dwarf\ object\ who\ is\ an\ Ultimate\ Miner\ and\ executes\ action\ based\ on\ state\ (Moore's\ Machine\ implementation)\n\n\n
comment2.params=value
comment2.target=void\ setMap(Map)
comment2.text=\n\ Sets\ the\ map\ for\ a\ simulation\n\ \n\ @param\ map\ for\ the\ simulation\n
comment20.params=
comment20.target=void\ goSuperMiner()
comment20.text=\n\ Determines\ the\ state\ of\ the\ Dwarf\ object\ who\ is\ a\ SuperMiner\ and\ executes\ action\ based\ on\ state\ (Moore's\ Machine\ implementation)\n\n\n
comment21.params=
comment21.target=void\ goMinerBuilder()
comment21.text=\n\ Determines\ the\ state\ of\ the\ Dwarf\ object\ who\ is\ a\ MinerBuilder\ and\ executes\ action\ based\ on\ state\ (Moore's\ Machine\ implementation)\n\n\n
comment22.params=
comment22.target=void\ goDigger()
comment22.text=\n\ Determines\ the\ state\ of\ the\ Dwarf\ object\ who\ is\ a\ digger\ and\ executes\ action\ based\ on\ state\ (Moore's\ Machine\ implementation)\n\n\n
comment23.params=
comment23.target=void\ goSearcher()
comment23.text=\n\ Determines\ the\ state\ of\ the\ Dwarf\ object\ who\ is\ a\ searcher\ and\ executes\ action\ based\ on\ state\ (Moore's\ Machine\ implementation)\n\n\n
comment24.params=
comment24.target=void\ dwarfNodeInteractGold()
comment25.params=nextNode
comment25.target=void\ dwarfNodeInteractMove(MapNode)
comment26.params=nextNode
comment26.target=void\ dwarfNodeInteractBuild(MapNode)
comment27.params=nextNode
comment27.target=void\ dwarfNodeInteractDig(MapNode)
comment28.params=g
comment28.target=void\ paint(java.awt.Graphics)
comment28.text=\n\ Paints\ visualization\ of\ Dwarf\ object\ on\ canvas\n
comment29.params=
comment29.target=void\ updatePos()
comment3.params=logWriteObject\ dataWriteObject
comment3.target=void\ setWriter(java.io.PrintWriter,\ java.io.PrintWriter)
comment3.text=\n\ Sets\ the\ PrintWriter\ object\ of\ simulation,\ into\ which\ log\ data\ is\ written\n\ \n\ @param\ PrintWriter\ for\ log\ data\n
comment30.params=
comment30.target=int\ getDiff()
comment30.text=\n\ Returns\ the\ difference\ factor\ used\ to\ sort\ out\ Dwarf\ objects\ in\ a\ Queue\ \n\ \n\ @return\ difference\ factor\ of\ Dwarf\ object\n
comment31.params=
comment31.target=int\ getID()
comment31.text=\n\ Returns\ the\ ID\ of\ the\ Dwarf\ object\n\ \n\ @return\ ID\ of\ the\ Dwarf\ object\n
comment32.params=value
comment32.target=void\ setDiff(int)
comment32.text=\n\ Sets\ the\ difference\ factor\ used\ to\ sort\ out\ Dwarf\ objects\ in\ a\ Queue\ \n\ \n\ @param\ difference\ factor\ of\ Dwarf\ object\n
comment33.params=
comment33.target=boolean\ isDeleted()
comment33.text=\n\ Returns\ true\ if\ Dwarf\ object\ has\ been\ terminated\ in\ the\ simulation\n\ \n\ @return\ boolean\ value\ determining\ the\ existence\ of\ object\ in\ Simulation\n
comment34.params=
comment34.target=int\ getCarry()
comment34.text=\n\ Returns\ the\ total\ amount\ of\ gold\ mined\ by\ the\ Dwarf\ object\n\ \n\ @return\ amount\ of\ treasure\ carried\ by\ Dwarf\ object\n
comment35.params=
comment35.target=java.lang.String\ getPos()
comment35.text=\n\ Returns\ the\ current\ postion\ of\ the\ Dwarf\ object\n\ \n\ @return\ Position\ of\ the\ Dwarf\ object\n
comment36.params=
comment36.target=int[]\ getData()
comment36.text=\n\ Returns\ the\ total\ data\ of\ Dwarf\ (Total\ number\ of\ Gold\ mined\ and\ way\ of\ death)\n\ \n\ @return\ int\ array\ containing\ total\ number\ of\ gold\ mined\ and\ integer\ indicating\ way\ of\ death\n
comment37.params=
comment37.target=java.lang.String\ getType()
comment37.text=\n\ Returns\ the\ type\ of\ Dwarf\ of\ the\ Dwarf\ object\n\ \n\ @return\ String\ type\ of\ Dwarf\n
comment38.params=node
comment38.target=void\ setGoldLoc(MapNode)
comment38.text=\n\ Sets\ the\ gold\ location\ to\ arrive\ to\ during\ Gold\ Mode\n\ \n
comment39.params=
comment39.target=MapNode\ getGoldLoc()
comment39.text=\n\ Returns\ the\ gold\ location\ to\ arrive\ to\ during\ Gold\ Mode\n\ \n
comment4.params=seed
comment4.target=void\ initDwarfs(int)
comment4.text=\n\ Initializes\ global\ Dwarf\ objects\ in\ Dwarf\ class\ for\ class-level\ simulation.\ \n\ \ \n
comment40.params=currString
comment40.target=void\ checkRiverFeature(java.lang.String)
comment41.params=object
comment41.target=int\ compareTo(Dwarf)
comment41.text=\n\ Compares\ two\ Dwarf\ objects\ based\ on\ difference\ factor\n\ Returns\ the\ current\ postion\ of\ the\ Dwarf\ object\n\ @param\ Dwarf\ object\ to\ be\ compared\ to\ object\n\ @return\ difference\ in\ the\ difference\ factor\ of\ the\ input\ Dwarf\ object\n
comment5.params=
comment5.target=int\ getTotalGold()
comment5.text=\n\ Returns\ the\ total\ amount\ of\ Gold\ obtained\ in\ a\ simulation\ \n\ \ \n\ \ @return\ int\ value\ of\ total\ amount\ of\ Gold\ obtained\ in\ a\ simulation\ \n
comment6.params=canvas\ setGUI
comment6.target=void\ goDwarfs(SimulationController,\ int)
comment6.text=\n\ Enables\ next-Dwarf-in-queue\ to\ crawl\ over\ map\ and\ take\ actions.\n\ \n\ @param\ canvas\ input\ to\ update\ movement\ of\ Dwarfs.\n\ @param\ int\ setGUI\ to\ choose\ if\ GUI\ should\ be\ on\ or\ off\n
comment7.params=
comment7.target=void\ printDwarfData()
comment7.text=\n\ Prints\ data\ of\ individual\ dwarf\ into\ a\ .csv\ file.\n\ \n
comment8.params=g
comment8.target=void\ paintDwarfs(java.awt.Graphics)
comment8.text=\n\ Draws\ Dwarf\ objects\ on\ map\ canvas\n\ \n\ @param\ Graphics\ object\ that\ draws\ Dwarf\ objects\n
comment9.params=text
comment9.target=void\ printToWriter(java.lang.String)
comment9.text=\n\ Writes\ text\ into\ log\ files\n\ \n\ @param\ text\ to\ be\ written\ into\ log\ file\n
numComments=42
