#BlueJ class context
comment0.target=MapNode
comment0.text=\n\ Represents\ a\ grid\ on\ the\ map\ of\ a\ mine.\n\n\ @author\ Sena\ Yevenyo\n\ @version\ October\ 21,\ 2019\n
comment1.params=value
comment1.target=void\ setSeed(int)
comment1.text=\n\ Sets\ the\ value\ of\ the\ seed\ for\ the\ Random\ object\ in\ Map\ class\n\ @param\ int\ value,\ seed\ input\ for\ MapNode\ class\n
comment10.params=
comment10.target=void\ buildBridge()
comment10.text=\n\ Builds\ a\ bridge\ over\ MapNode\ objects\ with\ Pit\ feature\ \n\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment12.params=
comment12.target=int\ getX()
comment12.text=\n\ Returns\ the\ X\ position\ of\ a\ Dwarf\ object\n\n\ @return\ x\ position\ of\ Dwarf\ object\n
comment13.params=
comment13.target=int\ getY()
comment13.text=\n\ Returns\ the\ Y\ position\ of\ a\ Dwarf\ object\n\n\ @return\ y\ position\ of\ Dwarf\ object\n
comment14.params=dwarf
comment14.target=void\ addDwarf(Dwarf)
comment14.text=\n\ Adds\ a\ Dwarf\ object\ to\ a\ location\ on\ Map(on\ MapNode\ object)\n\n\ @param\ Dwarf\ to\ be\ added\n
comment15.params=dwarf
comment15.target=void\ removeDwarf(Dwarf)
comment15.text=\n\ Removes\ a\ Dwarf\ object\ of\ Miner\ from\ a\ location\ on\ Map(on\ MapNode\ object)\n\n\ @param\ Dwarf\ to\ be\ removed\n
comment16.params=
comment16.target=boolean\ containsMiners()
comment16.text=\n\ Checks\ if\ there\ are\ miners\ present\ on\ a\ location\ on\ Map(on\ MapNode\ object)\n\n\ @return\ Boolean\ value\ indicating\ presence\ or\ absence\ of\ Dwarfs\ on\ the\ node\n
comment17.params=dwarf
comment17.target=boolean\ containMiner(Dwarf)
comment17.text=\n\ Checks\ if\ there\ is\ a\ Miner\ on\ a\ location\ on\ Map(on\ MapNode\ object)\n\n\ @return\ Boolean\ value\ indicating\ presence\ or\ absence\ of\ Dwarf\ object\ on\ node\n
comment18.params=mapNode
comment18.target=void\ informGold(MapNode)
comment18.text=\n\ Inform\ Dwarf\ objects\ of\ the\ presence\ of\ gold\ on\ a\ MapNode\ object\ \n\ \n
comment19.params=dwarf
comment19.target=boolean\ beenPresent(Dwarf)
comment19.text=\n\ Checks\ if\ a\ Dwarf\ object\ has\ been\ present\ at\ a\ location\ on\ the\ map\n\n\ @param\ Dwarf\ to\ be\ checked\n
comment2.params=posX\ posY\ feature
comment2.target=MapNode(int,\ int,\ int)
comment2.text=\n\ Constructor\ for\ objects\ of\ class\ MapNode\n
comment20.params=linkObject
comment20.target=void\ setLink(MapNode)
comment20.text=\n\ Sets\ link\ node\ for\ MapNode\ with\ water\ feature\n\n\ @param\ link\ of\ MapNode\ with\ water\ feature\n
comment21.params=
comment21.target=MapNode\ getLink()
comment21.text=\n\ Returns\ link\ node\ for\ MapNode\ with\ water\ feature\n\n\ @return\ link\ of\ MapNode\ with\ water\ feature\n
comment22.params=c1\ c2
comment22.target=int\ compare(Dwarf,\ Dwarf)
comment3.params=
comment3.target=java.awt.Color\ getColor()
comment3.text=\n\ Octains\ color\ of\ MapNode\ object\n\n\ @return\ Color\ variable\ of\ MapNode\n
comment4.params=
comment4.target=java.lang.String\ getFeature()
comment4.text=\n\ Obtains\ feature\ of\ a\ MapNode\ object\n\n\ @return\ the\ feature\ of\ a\ map\ in\ String\ format\n
comment5.params=
comment5.target=boolean\ digged()
comment5.text=\n\ Checks\ if\ a\ MapNode\ object\ has\ been\ dug\n\n\ @return\ the\ boolean\ value\ that\ shows\ if\ a\ MapNode\ object\ has\ been\ dug\ \n
comment6.params=
comment6.target=void\ dig()
comment6.text=\n\ Digs\ a\ mapNode\ object\n\n
comment7.params=
comment7.target=void\ cover()
comment7.text=\n\ Covers\ a\ mapNode\ object\ that\ has\ been\ mistakenly\ dig\ (used\ in\ digRiverRecursive)\ \n\n
comment8.params=node
comment8.target=void\ digRiverRecursive(MapNode)
comment9.params=
comment9.target=int\ digGold()
comment9.text=\n\ Digs\ gold\ treasure\ from\ a\ node\n\n\ @return\ value\ of\ int\ 1,\ until\ gold\ supplies\ last\n
numComments=23
