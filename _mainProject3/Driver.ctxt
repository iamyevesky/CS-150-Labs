#BlueJ class context
comment0.target=Driver
comment0.text=\n\ Represents\ a\ driver\ in\ the\ rideshare\ app\ network\ simulation.\n\n\ @author\ Sena\ Yevenyo\n\ @version\ December\ 2,\ 2019\n
comment1.params=roadNetwork
comment1.target=void\ initNetwork(Network)
comment1.text=\n\ Initilaizes\ the\ class\ level\ network\ for\ class\ level\ interaction\ for\ simulation\n\n\ @param\ Network\ roadNetwork\ -\ network\ system\ for\ all\ Drivers\ in\ simulation\n
comment10.params=
comment10.target=float\ getAvgLateTime()
comment10.text=\n\ Returns\ the\ average\ of\ the\ total\ satisfaction\ of\ all\ Drivers\ in\ the\ simulation.\n\ \n\ @return\ the\ average\ of\ the\ total\ satisfaction\ of\ all\ Drivers\ in\ the\ simulation.\n
comment11.params=
comment11.target=int\ getLostCustomers()
comment12.params=id\ location
comment12.target=Driver(int,\ Node)
comment12.text=\n\ Constructor\ for\ objects\ of\ class\ Driver\n\ @param\ int\ id\ -\ unique\ int\ ID\ of\ the\ Driver\ object\n\ @param\ Node\ location\ -\ initial\ location\ of\ object\ in\ network\n
comment13.params=
comment13.target=int\ getID()
comment13.text=\n\ Returns\ the\ ID\ of\ the\ Driver\ object\n\n\ @return\ a\ unique\ int\ ID\ of\ the\ Driver\ object\n
comment14.params=
comment14.target=boolean\ isAvailable()
comment14.text=\n\ Returns\ the\ availability\ of\ Driver\ object\n\n\ @return\ the\ availability\ of\ Driver\ object\n
comment15.params=
comment15.target=boolean\ utilized()
comment15.text=\n\ Returns\ true\ if\ the\ Driver\ object\ was\ used\ in\ the\ simulation\n\n\ @return\ true\ if\ the\ Driver\ object\ was\ used\ in\ the\ simulation\n
comment16.params=passenger
comment16.target=void\ setCustomer(Passenger)
comment16.text=\n\ Sets\ the\ passenger\ object\ for\ the\ Driver\ object\n\n\ @param\ Passeger\ passeger\ -\ passenger\ object\ for\ the\ Driver\ object\n
comment17.params=
comment17.target=Passenger\ getCustomer()
comment17.text=\n\ Gets\ the\ passenger\ object\ for\ the\ Driver\ object\n\n\ @return\ the\ passenger\ object\ for\ the\ Driver\ object\n
comment18.params=
comment18.target=Node\ getLoc()
comment18.text=\n\ Returns\ the\ current\ location\ of\ the\ Driver\ object\n\n\ @return\ the\ current\ location\ of\ the\ Driver\ object\n
comment19.params=
comment19.target=int\ getTimeBetweenTraversal()
comment19.text=\n\ Returns\ the\ time\ spent\ in\ traversing\ between\ two\ nodes\ location\ of\ the\ Driver\ object\n\n\ @return\ the\ time\ spent\ in\ traversing\ between\ two\ nodes\ in\ the\ road\ network\n
comment2.params=numOfDrivers
comment2.target=void\ initDrivers(int)
comment2.text=\n\ Initilaizes\ the\ Driver\ objects\ used\ in\ simulation\n\n\ @param\ int\ numOfDrivers\ -\ number\ of\ Drivers\ used\ in\ sumulation\n
comment20.params=
comment20.target=Node\ getNext()
comment20.text=\n\ Returns\ the\ next\ destination\ location\ of\ the\ Driver\ object\n\n\ @return\ the\ next\ destination\ location\ of\ the\ Driver\ object\n
comment21.params=
comment21.target=int\ getDistanceTravelled()
comment21.text=\n\ Returns\ the\ total\ distance\ travelled\ by\ Driver\ object\n\n\ @return\ the\ total\ distance\ travelled\ by\ Driver\ object\n
comment22.params=
comment22.target=float\ getLateTime()
comment22.text=\n\ Returns\ the\ average\ late\ time\ of\ the\ Driver\ object\n\n\ @return\ the\ average\ late\ time\ of\ the\ Driver\ object\n
comment23.params=network
comment23.target=void\ go(Network)
comment23.text=\n\ State\ system\ that\ determines\ the\ action\ of\ the\ Driver\ object\ based\ on\ current\ and\ previous\ states\n\n\ @param\ Network\ network\ -\ Road\ network\ the\ Driver\ object\ belongs\n
comment3.params=
comment3.target=int\ getNumOfDrivers()
comment3.text=\n\ Returns\ the\ number\ of\ Driver\ objects\ used\ in\ simulation\n\ \n\ @return\ the\ number\ of\ Driver\ objects\ used\ in\ simulation\n
comment4.params=
comment4.target=float\ getUtilizedFraction()
comment4.text=\n\ Returns\ the\ fraction\ of\ Driver\ objects\ utilized\ in\ simulation\n\ \n\ @return\ the\ fraction\ of\ Driver\ objects\ utilized\ in\ simulation\n
comment5.params=
comment5.target=float\ getAverageDistanceTravelled()
comment5.text=\n\ Returns\ the\ average\ distance\ of\ Driver\ objects\ used\ in\ simulation\n\ \n\ @return\ the\ average\ distance\ of\ Driver\ objects\ used\ in\ simulation\n
comment6.params=
comment6.target=int\ getMinimumDistanceTravelled()
comment6.text=\n\ Returns\ the\ minimum\ distance\ of\ Driver\ objects\ used\ in\ simulation\n\ \n\ @return\ the\ minimum\ distance\ of\ Driver\ objects\ used\ in\ simulation\n
comment7.params=
comment7.target=int\ getMaximumDistanceTravelled()
comment7.text=\n\ Returns\ the\ maximum\ distance\ of\ Driver\ objects\ used\ in\ simulation\n\ \n\ @return\ the\ maximum\ distance\ of\ Driver\ objects\ used\ in\ simulation\n
comment8.params=prob\ distance
comment8.target=int\ assignCustomers(float,\ int)
comment8.text=\n\ Assigns\ customers\ to\ available\ Driver\ objects\ at\ a\ specific\ distance\ in\ simulation\n\ depending\ on\ a\ probability\ value\n\ \n\ @param\ float\ prob\ -\ probability\ value\ that\ determines\ if\ a\ Passenger\ will\ be\ assigned\ to\ a\ Driver\ object\ or\ not.\n\ @param\ int\ distance\ -\ Distance\ the\ Driver\ object\ has\ to\ cover\ for\ each\ task\ which\ are\n\ from\ getting\ from\ its\ current\ location\ to\ the\ passenger's\ location\ and\n\ getting\ from\ passenger's\ location\ to\ the\ passenger's\ destination\n
comment9.params=
comment9.target=void\ goDrivers()
comment9.text=\n\ Executes\ the\ state\ system\ function\ that\ determines\ the\ action\ of\ all\ Driver\ objects\ in\ simulation\n\n
numComments=24
